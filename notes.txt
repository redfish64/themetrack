We have a python parser for each filetype, ib, schwab, capex

We have a directory of files to load to produce a result.
We may in the future allow api driven access to data, and this could be saved to a directory if the user wants

There are two main functions:
1. Populate the data directory. This includes override rules, forex data, brokerage reports, and capex reports.
2. Process the data directory to a result directory, which includes debugging files, associations between rows in 
holdings and picks to override_rules, and an error/warning report. 

Note that we always start from the input data, because we don't want to have conditions like having to refresh the master of record, and then
produce reports as two separate steps. It's confusing.

We will end up with a few classes:
Holding - a position that is held by the account
Pick - a pick of a particular stock

Forex value date. This will be taken from the brokerage report date. Since the brokerage report also 
displays the current value, then, it only makes sense that we convert the currency on that date. 
If we took the current value indepedently, from the web or something, then it may make more sense
to use a different date.

We start with a "snapshot". A snapshot has 2 subdirs as above, data, and reports. A config/override file is in the main directory

First the user runs:

$ theme_track.py create_snapshot
Snapshot created at C:\theme_track\2024-05-24

This will create the new directory, and place theme_track_config.xlsx
By default this will be copied from the last theme_track report or a hardcoded one somewhere (how to do this with pyinstaller?)

Then they fill it up with reports from their brokerage(s). Then they login to capexinsider.com and run:
$ theme_track.py scrape_capex chrome
Read capex snapshot

Finally they run:
$ theme_track.py create_report

which will run the report and popup excel for them (or libreoffice). Popping up libreoffice or excel will be a configurable option.
If they need to adjust the custom rules, etc. they can do so and rerun create_report


We have a separate system_rules and custom rules. We do this because if we release a new version, we want to be able to update the 
system_rules as well. Otherwise, the old system rules will be copied over with the regular config when a new snapshot is created.


